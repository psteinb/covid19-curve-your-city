# This is a basic workflow to help you get started with Actions

name: Data Provider

# Controls when the action will run. Triggers the workflow on push or pull request
# schedule event for wee past 12 in Germany, so 10 UTC in summer time
on:
  schedule:
    - cron: "25 12 * * 1-5" # Mo–Fr 12:25
    - cron: "25 20 * * 1-5" # Mo–Fr 20:25
    - cron: "25 13 * * 6,0" # Sa,Su 13:25
    - cron: "25 21 * * 6,0" # Sa,Su 21:25

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
     
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@master

    # Runs a single command using the runners shell
    - name: the shell script
      run: |
        date # tell us system time
        fn="data/de_dresden_www.csv"
        ls -la "$fn" || { e=$?; echo "err: $e"; }
        cat "$fn" || { e=$?; echo "err: $e"; }
        ./dresden-json2csv.sh || { e=$?; echo "err: $e"; }

    # Stores a resulting file for e.g. later download
#    - name: archive resulting csv file
#      uses: actions/upload-artifact@v1
#      with:
#          name: resulting csv file
#          path: data/de_dresden_www.csv

    # Runs a set of commands using the runners shell
    - name: show file content 
      shell: sh
      run: |
        fn="data/de_dresden_www.csv"
        echo "contents of $fn"
        echo "----8X----"
        cat "$fn"
        echo "----X8----"
        printf "done.\n" 

    - name: Add & Commit
      uses: EndBug/add-and-commit@v5
      with:
        add: "data/de_dresden_www.csv data/de_dresden_www.json data/now.csv"
#        author_name: ci-script
#        author_email: ci-script@users.noreply.github.com

#    - name: commit resulting file to repository 
#      shell: sh
#      run: |
#        printf "d: fn"
#        fn="data/de_dresden_www.csv"
#        printf " $fn\n"
#        printf "d: git config user.name ci-script\n"
#        git config user.name ci-script || { e=$?; echo "err: $e"; }
#        git config user.name
#        printf "d: git config user.email ci-script@users.noreply.github.com\n"
#        git config user.email ci-script@users.noreply.github.com || { e=$?; echo "err: $e"; }
#        git config user.email
#        printf "d: git add $fn\n"
#        git add "$fn" || { e=$?; echo "err: $e"; }
#        printf "d: test \$e ($e) for value 1\n"
#        if test "$e" -eq "1"; then printf "%b" "\e[1;34mError: no changes\e[0m"; fi
#        printf "d: git commit $fn -m \"add result\"\n"
#        git commit "$fn" -m "add result" || { e=$?; echo "err: $e"; }
#        printf "d: git push origin master\n"
#        git push origin master || { e=$?; echo "err: $e"; }
